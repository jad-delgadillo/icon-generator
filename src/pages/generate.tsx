import { FormGroup } from "@/components/FormGroup";
import { Button } from "@/components/button";
import Input from "@/components/input";
import { api } from "@/utils/api";
import { type NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import React, { useState } from "react";

const colors = [
  "blue",
  "red",
  "pink",
  "green",
  "orange",
  "yellow",
  "white",
  "black",
];

const GeneratePage: NextPage = () => {
  const [form, setForm] = useState({
    prompt: "",
    color: "",
  });
  const [imageUrl, setImageUrl] = useState("");

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      console.log("mutation finished", data.imageUrl);
      if (!data.imageUrl) return;
      setImageUrl(data.imageUrl);
    },
  });

  function handleFormSubmit(e: React.FormEvent) {
    e.preventDefault();
    generateIcon.mutate(form);
    // setForm((prev) => ({ ...prev, prompt: "" }));
  }

  function updateForm(key: string) {
    return function (e: React.ChangeEvent<HTMLInputElement>) {
      setForm((prev) => ({
        ...prev,
        [key]: e.target.value,
      }));
    };
  }

  const session = useSession();

  const isLoggedIn = !!session.data;

  return (
    <>
      <Head>
        <title>Generate Icons</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" container flex min-h-screen flex-col bg-zinc-950 px-5 ">
        {!isLoggedIn && <></>}
        {isLoggedIn && <></>}
        <div className="mt-[8rem] flex flex-col gap-2 rounded-lg bg-zinc-900 p-2">
          <h1 className="">Generate your Icons</h1>
          <p>Fill the form below to start generatig your icons.</p>
        </div>
        <form
          onSubmit={handleFormSubmit}
          className="container mx-auto flex flex-col "
        >
          <div className="style">
            <h5>1. Describe what you want your icon to look like.</h5>
            <FormGroup>
              <label className="font-semibold">Prompt</label>
              <Input
                value={form.prompt}
                onChange={updateForm("prompt")}
              ></Input>
            </FormGroup>
          </div>
          <div className="style">
            <h5>2. Pick up your icon color</h5>
            <FormGroup className="grid grid-cols-4">
              {colors.map((color) => (
                <label key={color} className="flex gap-2  py-3 font-semibold">
                  <input
                    type="radio"
                    name="color"
                    checked={color === form.color}
                    onChange={() => {
                      setForm((prev) => ({ ...prev, color }));
                    }}
                  ></input>
                  {color}
                </label>
              ))}
            </FormGroup>
          </div>
          <Button
            isLoading={generateIcon.isLoading}
            disabled={generateIcon.isLoading}
            className="mt-4 block w-28"
          >
            Submit
          </Button>
        </form>

        {imageUrl && (
          <div className="mt-4">
            <h4>Your Icons</h4>
            <section className="mb-12 grid grid-cols-4 gap-4 ">
              <Image
                src={imageUrl}
                width={100}
                height={100}
                alt="image generated from the app"
                className="w-full rounded-lg"
              />
            </section>
          </div>
        )}
      </main>
    </>
  );
};

export default GeneratePage;
